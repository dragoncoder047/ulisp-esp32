/* uLisp ESP Release 4.4 - www.ulisp.com
   David Johnson-Davies - www.technoblogy.com - 21st March 2023
   Licensed under the MIT license: https://opensource.org/licenses/MIT
*/
#ifndef ULISP_H
#define ULISP_H
#ifdef __cplusplus
extern "C" {
#endif
#include <setjmp.h>
#include <SPI.h>
#include <Wire.h>
#include <limits.h>
#include <EEPROM.h>
#include <WiFi.h>
#if defined(gfxsupport)
#define COLOR_WHITE ST77XX_WHITE
#define COLOR_BLACK ST77XX_BLACK
#include <Adafruit_GFX.h>
#include <Adafruit_ST7789.h>
Adafruit_ST7789 tft;
#define TFT_BACKLITE 4
#endif
#include <SD.h>
#define SDSIZE 172
#define WORDALIGNED __attribute__((aligned (4)))
#define BUFFERSIZE 36
#define WORKSPACESIZE (9216-SDSIZE)
#define LITTLEFS
#include "FS.h"
#include <LittleFS.h>
#ifndef analogWrite
#define analogWrite(x,y) dacWrite((x),(y))
#endif
#define nil                NULL
#define car(x)             (((object *) (x))->car)
#define cdr(x)             (((object *) (x))->cdr)
#define first(x)           (((object *) (x))->car)
#define second(x)          (car(cdr(x)))
#define cddr(x)            (cdr(cdr(x)))
#define third(x)           (car(cdr(cdr(x))))
#define push(x, y)         ((y);
enum type { ZZERO=0, SYMBOL=2, CODE=4, NUMBER=6, STREAM=8, CHARACTER=10, FLOAT=12, ARRAY=14, STRING=16, PAIR=18 };
enum token { UNUSED, BRA, KET, QUO, DOT };
enum stream { SERIALSTREAM, I2CSTREAM, SPISTREAM, SDSTREAM, WIFISTREAM, STRINGSTREAM, GFXSTREAM };
enum fntypes_t { OTHER_FORMS, TAIL_FORMS, FUNCTIONS, SPECIAL_FORMS };
extern const char serialstream[] PROGMEM;
extern const char i2cstream[] PROGMEM;
extern const char spistream[] PROGMEM;
extern const char sdstream[] PROGMEM;
extern const char wifistream[] PROGMEM;
extern const char stringstream[] PROGMEM;
extern const char gfxstream[] PROGMEM;
extern PGM_P const streamname[] PROGMEM;
typedef uint32_t symbol_t;
typedef struct sobject {
  union {
    struct {
      sobject *car;
      sobject *cdr;
    };
    struct {
      unsigned int type;
      union {
        symbol_t name;
        int integer;
        int chars;
        float single_float;
      };
    };
  };
} object;
typedef object *(*fn_ptr_type)(object *, object *);
typedef void (*mapfun_t)(object *, object **);
typedef const struct {
  PGM_P string;
  fn_ptr_type fptr;
  uint8_t minmax;
  const char *doc;
} tbl_entry_t;
typedef int (*gfun_t)();
typedef void (*pfun_t)(char);
typedef uint16_t builtin_t;
enum builtins: builtin_t { NIL, TEE, NOTHING, OPTIONAL, INITIALELEMENT, ELEMENTTYPE, BIT, AMPREST, LAMBDA, LET, LETSTAR,
CLOSURE, PSTAR, QUOTE, DEFUN, DEFVAR, CAR, FIRST, CDR, REST, NTH, AREF, STRINGFN, PINMODE, DIGITALWRITE,
ANALOGREAD, REGISTER, FORMAT,
 };
extern object Workspace[WORKSPACESIZE] WORDALIGNED;
extern jmp_buf toplevel_handler;
extern jmp_buf *handler;
extern unsigned int Freespace;
extern object *Freelist;
extern unsigned int I2Ccount;
extern unsigned int TraceFn[TRACEMAX];
extern unsigned int TraceDepth[TRACEMAX];
extern builtin_t Context;
extern object *GlobalEnv;
extern object *GCStack;
extern object *GlobalString;
extern object *GlobalStringTail;
extern int GlobalStringIndex;
extern uint8_t PrintCount;
extern uint8_t BreakLevel;
extern char LastChar;
extern char LastPrint;
enum flag { PRINTREADABLY, RETURNFLAG, ESCAPE, EXITEDITOR, LIBRARYLOADED, NOESC, NOECHO, MUFFLEERRORS };
extern volatile uint8_t Flags;
void errorsub (symbol_t fname, PGM_P string);
void errorend ();
void errorsym (symbol_t fname, PGM_P string, object *symbol);
void errorsym2 (symbol_t fname, PGM_P string);
void error (PGM_P string, object *symbol);
void error2 (PGM_P string);
void formaterr (object *formatstr, PGM_P string, uint8_t p);
extern const char notanumber[] PROGMEM;
extern const char notaninteger[] PROGMEM;
extern const char notastring[] PROGMEM;
extern const char notalist[] PROGMEM;
extern const char notasymbol[] PROGMEM;
extern const char notproper[] PROGMEM;
extern const char toomanyargs[] PROGMEM;
extern const char toofewargs[] PROGMEM;
extern const char noargument[] PROGMEM;
extern const char nostream[] PROGMEM;
extern const char overflow[] PROGMEM;
extern const char divisionbyzero[] PROGMEM;
extern const char indexnegative[] PROGMEM;
extern const char invalidarg[] PROGMEM;
extern const char invalidkey[] PROGMEM;
extern const char illegalclause[] PROGMEM;
extern const char invalidpin[] PROGMEM;
extern const char oddargs[] PROGMEM;
extern const char indexrange[] PROGMEM;
extern const char canttakecar[] PROGMEM;
extern const char canttakecdr[] PROGMEM;
extern const char unknownstreamtype[] PROGMEM;
void initworkspace ();
object *myalloc ();
inline void myfree (object *obj);
object *number (int n);
object *makefloat (float f);
object *character (uint8_t c);
object *cons (object *arg1, object *arg2);
object *symbol (symbol_t name);
inline object *bsymbol (builtin_t name);
object *intern (symbol_t name);
bool eqsymbols (object *obj, char *buffer);
object *internlong (char *buffer);
object *stream (uint8_t streamtype, uint8_t address);
object *newstring ();
void markobject (object *obj);
void sweep ();
void gc (object *form, object *env);
int tracing (symbol_t name);
void trace (symbol_t name);
void untrace (symbol_t name);
bool consp (object *x);
#define atom(x) (!consp(x))
bool listp (object *x);
#define improperp(x) (!listp(x))
object *quote (object *arg);
builtin_t builtin (symbol_t name);
symbol_t sym (builtin_t x);
int8_t toradix40 (char ch);
char fromradix40 (char n);
uint32_t pack40 (char *buffer);
bool valid40 (char *buffer);
int8_t digitvalue (char d);
int checkinteger (object *obj);
int checkbitvalue (object *obj);
float checkintfloat (object *obj);
int checkchar (object *obj);
object *checkstring (object *obj);
int isstream (object *obj);
int isbuiltin (object *obj, builtin_t n);
bool builtinp (symbol_t name);
int checkkeyword (object *obj);
void checkargs (object *args);
boolean eq (object *arg1, object *arg2);
boolean equal (object *arg1, object *arg2);
int listlength (object *list);
object *add_floats (object *args, float fresult);
object *subtract_floats (object *args, float fresult);
object *negate (object *arg);
object *multiply_floats (object *args, float fresult);
object *divide_floats (object *args, float fresult);
int myround (float number);
object *compare (object *args, bool lt, bool gt, bool eq);
int intpower (int base, int exp);
object *assoc (object *key, object *list);
object *delassoc (object *key, object **alist);
int nextpower2 (int n);
object *buildarray (int n, int s, object *def);
object *makearray (object *dims, object *def, bool bitp);
object **arrayref (object *array, int index, int size);
object **getarray (object *array, object *subs, object *env, int *bit);
void rslice (object *array, int size, int slice, object *dims, object *args);
object *readarray (int d, object *args);
object *readbitarray (gfun_t gfun);
void pslice (object *array, int size, int slice, object *dims, pfun_t pfun, bool bitp);
void printarray (object *array, pfun_t pfun);
void indent (uint8_t spaces, char ch, pfun_t pfun);
object *startstring ();
object *princtostring (object *arg);
void buildstring (char ch, object **tail);
object *copystring (object *arg);
object *readstring (uint8_t delim, gfun_t gfun);
int stringlength (object *form);
uint8_t nthchar (object *string, int n);
int gstr ();
void pstr (char c);
object *lispstring (char *s);
bool stringcompare (object *args, bool lt, bool gt, bool eq);
object *documentation (object *arg, object *env);
object *apropos (object *arg, bool print);
char *cstring (object *form, char *buffer, int buflen);
uint32_t ipstring (object *form);
object *value (symbol_t n, object *env);
object *findpair (object *var, object *env);
bool boundp (object *var, object *env);
object *findvalue (object *var, object *env);
object *closure (int tc, symbol_t name, object *function, object *args, object **env);
object *apply (object *function, object *args, object *env);
object **place (object *args, object *env, int *bit);
object *carx (object *arg);
object *cdrx (object *arg);
object *cxxxr (object *args, uint8_t pattern);
void mapcarfun (object *result, object **tail);
void mapcanfun (object *result, object **tail);
object *mapcarcan (object *args, object *env, mapfun_t fun);
void I2Cinit (bool enablePullup);
int I2Cread ();
void I2Cwrite (uint8_t data);
bool I2Cstart (uint8_t address, uint8_t read);
bool I2Crestart (uint8_t address, uint8_t read);
void I2Cstop (uint8_t read);
inline int spiread ();
void serialbegin (int address, int baud);
void serialend (int address);
gfun_t gstreamfun (object *args);
inline void spiwrite (char c);
void checkanalogread (int pin);
void checkanalogwrite (int pin);
void tone (int pin, int note);
void noTone (int pin);
const int scale[] PROGMEM;
void playnote (int pin, int note, int octave);
void nonote (int pin);
void initsleep ();
void doze (int secs);
const int PPINDENT;
const int PPWIDTH;
const int GFXPPWIDTH;
int ppwidth;
void pcount (char c);
uint8_t atomwidth (object *obj);
uint8_t basewidth (object *obj, uint8_t base);
bool quoted (object *obj);
int subwidth (object *obj, int w);
int subwidthlist (object *form, int w);
void superprint (object *form, int lm, pfun_t pfun);
void supersub (object *form, int lm, int super, pfun_t pfun);
object *edit (object *fun);
object *sp_quote (object *args, object *env);
object *sp_or (object *args, object *env);
object *sp_defun (object *args, object *env);
object *sp_defvar (object *args, object *env);
object *sp_setq (object *args, object *env);
object *sp_loop (object *args, object *env);
object *sp_return (object *args, object *env);
object *sp_push (object *args, object *env);
object *sp_pop (object *args, object *env);
object *sp_incf (object *args, object *env);
object *sp_decf (object *args, object *env);
object *sp_setf (object *args, object *env);
object *sp_dolist (object *args, object *env);
object *sp_dotimes (object *args, object *env);
object *sp_trace (object *args, object *env);
object *sp_untrace (object *args, object *env);
object *sp_formillis (object *args, object *env);
object *sp_time (object *args, object *env);
object *sp_withoutputtostring (object *args, object *env);
object *sp_withserial (object *args, object *env);
object *sp_withi2c (object *args, object *env);
object *sp_withspi (object *args, object *env);
object *sp_withsdcard (object *args, object *env);
object *tf_progn (object *args, object *env);
object *tf_if (object *args, object *env);
object *tf_cond (object *args, object *env);
object *tf_when (object *args, object *env);
object *tf_unless (object *args, object *env);
object *tf_case (object *args, object *env);
object *tf_and (object *args, object *env);
object *fn_not (object *args, object *env);
object *fn_cons (object *args, object *env);
object *fn_atom (object *args, object *env);
object *fn_listp (object *args, object *env);
object *fn_consp (object *args, object *env);
object *fn_symbolp (object *args, object *env);
object *fn_arrayp (object *args, object *env);
object *fn_boundp (object *args, object *env);
object *fn_keywordp (object *args, object *env);
object *fn_setfn (object *args, object *env);
object *fn_streamp (object *args, object *env);
object *fn_eq (object *args, object *env);
object *fn_equal (object *args, object *env);
object *fn_car (object *args, object *env);
object *fn_cdr (object *args, object *env);
object *fn_caar (object *args, object *env);
object *fn_cadr (object *args, object *env);
object *fn_cdar (object *args, object *env);
object *fn_cddr (object *args, object *env);
object *fn_caaar (object *args, object *env);
object *fn_caadr (object *args, object *env);
object *fn_cadar (object *args, object *env);
object *fn_caddr (object *args, object *env);
object *fn_cdaar (object *args, object *env);
object *fn_cdadr (object *args, object *env);
object *fn_cddar (object *args, object *env);
object *fn_cdddr (object *args, object *env);
object *fn_length (object *args, object *env);
object *fn_arraydimensions (object *args, object *env);
object *fn_list (object *args, object *env);
object *fn_makearray (object *args, object *env);
object *fn_reverse (object *args, object *env);
object *fn_nth (object *args, object *env);
object *fn_aref (object *args, object *env);
object *fn_assoc (object *args, object *env);
object *fn_member (object *args, object *env);
object *fn_apply (object *args, object *env);
object *fn_funcall (object *args, object *env);
object *fn_append (object *args, object *env);
object *fn_mapc (object *args, object *env);
object *fn_mapcar (object *args, object *env);
object *fn_mapcan (object *args, object *env);
object *fn_add (object *args, object *env);
object *fn_subtract (object *args, object *env);
object *fn_multiply (object *args, object *env);
object *fn_divide (object *args, object *env);
object *fn_mod (object *args, object *env);
object *fn_oneplus (object *args, object *env);
object *fn_oneminus (object *args, object *env);
object *fn_abs (object *args, object *env);
object *fn_random (object *args, object *env);
object *fn_maxfn (object *args, object *env);
object *fn_minfn (object *args, object *env);
object *fn_noteq (object *args, object *env);
object *fn_numeq (object *args, object *env);
object *fn_less (object *args, object *env);
object *fn_lesseq (object *args, object *env);
object *fn_greater (object *args, object *env);
object *fn_greatereq (object *args, object *env);
object *fn_plusp (object *args, object *env);
object *fn_minusp (object *args, object *env);
object *fn_zerop (object *args, object *env);
object *fn_oddp (object *args, object *env);
object *fn_evenp (object *args, object *env);
object *fn_integerp (object *args, object *env);
object *fn_numberp (object *args, object *env);
object *fn_floatfn (object *args, object *env);
object *fn_floatp (object *args, object *env);
object *fn_sin (object *args, object *env);
object *fn_cos (object *args, object *env);
object *fn_tan (object *args, object *env);
object *fn_asin (object *args, object *env);
object *fn_acos (object *args, object *env);
object *fn_atan (object *args, object *env);
object *fn_sinh (object *args, object *env);
object *fn_cosh (object *args, object *env);
object *fn_tanh (object *args, object *env);
object *fn_exp (object *args, object *env);
object *fn_sqrt (object *args, object *env);
object *fn_log (object *args, object *env);
object *fn_expt (object *args, object *env);
object *fn_ceiling (object *args, object *env);
object *fn_floor (object *args, object *env);
object *fn_truncate (object *args, object *env);
object *fn_round (object *args, object *env);
object *fn_char (object *args, object *env);
object *fn_charcode (object *args, object *env);
object *fn_codechar (object *args, object *env);
object *fn_characterp (object *args, object *env);
object *fn_stringp (object *args, object *env);
object *fn_stringeq (object *args, object *env);
object *fn_stringless (object *args, object *env);
object *fn_stringgreater (object *args, object *env);
object *fn_sort (object *args, object *env);
object *fn_stringfn (object *args, object *env);
object *fn_concatenate (object *args, object *env);
object *fn_subseq (object *args, object *env);
object *fn_search (object *args, object *env);
object *fn_readfromstring (object *args, object *env);
object *fn_princtostring (object *args, object *env);
object *fn_prin1tostring (object *args, object *env);
object *fn_logand (object *args, object *env);
object *fn_logior (object *args, object *env);
object *fn_logxor (object *args, object *env);
object *fn_lognot (object *args, object *env);
object *fn_ash (object *args, object *env);
object *fn_logbitp (object *args, object *env);
object *fn_eval (object *args, object *env);
object *fn_globals (object *args, object *env);
object *fn_locals (object *args, object *env);
object *fn_makunbound (object *args, object *env);
object *fn_break (object *args, object *env);
object *fn_read (object *args, object *env);
object *fn_prin1 (object *args, object *env);
object *fn_print (object *args, object *env);
object *fn_princ (object *args, object *env);
object *fn_terpri (object *args, object *env);
object *fn_readbyte (object *args, object *env);
object *fn_readline (object *args, object *env);
object *fn_writebyte (object *args, object *env);
object *fn_writestring (object *args, object *env);
object *fn_writeline (object *args, object *env);
object *fn_restarti2c (object *args, object *env);
object *fn_gc (object *obj, object *env);
object *fn_room (object *args, object *env);
object *fn_cls (object *args, object *env);
object *fn_pinmode (object *args, object *env);
object *fn_digitalread (object *args, object *env);
object *fn_digitalwrite (object *args, object *env);
object *fn_analogread (object *args, object *env);
object *fn_analogreadresolution (object *args, object *env);
object *fn_analogwrite (object *args, object *env);
object *fn_delay (object *args, object *env);
object *fn_millis (object *args, object *env);
object *fn_sleep (object *args, object *env);
object *fn_note (object *args, object *env);
object *fn_register (object *args, object *env);
object *fn_edit (object *args, object *env);
object *fn_pprint (object *args, object *env);
object *fn_pprintall (object *args, object *env);
object *fn_format (object *args, object *env);
object *fn_require (object *args, object *env);
object *fn_listlibrary (object *args, object *env);
object *sp_help (object *args, object *env);
object *fn_documentation (object *args, object *env);
object *fn_apropos (object *args, object *env);
object *fn_aproposlist (object *args, object *env);
object *sp_unwindprotect (object *args, object *env);
object *sp_ignoreerrors (object *args, object *env);
object *sp_error (object *args, object *env);
object *sp_withclient (object *args, object *env);
object *fn_available (object *args, object *env);
object *fn_wifiserver (object *args, object *env);
object *fn_wifisoftap (object *args, object *env);
object *fn_connected (object *args, object *env);
object *fn_wifilocalip (object *args, object *env);
object *fn_wificonnect (object *args, object *env);
object *sp_withgfx (object *args, object *env);
object *fn_drawpixel (object *args, object *env);
object *fn_drawline (object *args, object *env);
object *fn_drawrect (object *args, object *env);
object *fn_fillrect (object *args, object *env);
object *fn_drawcircle (object *args, object *env);
object *fn_fillcircle (object *args, object *env);
object *fn_drawroundrect (object *args, object *env);
object *fn_fillroundrect (object *args, object *env);
object *fn_drawtriangle (object *args, object *env);
object *fn_filltriangle (object *args, object *env);
object *fn_drawchar (object *args, object *env);
object *fn_setcursor (object *args, object *env);
object *fn_settextcolor (object *args, object *env);
object *fn_settextsize (object *args, object *env);
object *fn_settextwrap (object *args, object *env);
object *fn_fillscreen (object *args, object *env);
object *fn_setrotation (object *args, object *env);
object *fn_invertdisplay (object *args, object *env);
extern const char string0[] PROGMEM;
extern const char string1[] PROGMEM;
extern const char string2[] PROGMEM;
extern const char string3[] PROGMEM;
extern const char string4[] PROGMEM;
extern const char string5[] PROGMEM;
extern const char string6[] PROGMEM;
extern const char string7[] PROGMEM;
extern const char string8[] PROGMEM;
extern const char string9[] PROGMEM;
extern const char string10[] PROGMEM;
extern const char string11[] PROGMEM;
extern const char string12[] PROGMEM;
extern const char string13[] PROGMEM;
extern const char string14[] PROGMEM;
extern const char string15[] PROGMEM;
extern const char string16[] PROGMEM;
extern const char string17[] PROGMEM;
extern const char string18[] PROGMEM;
extern const char string19[] PROGMEM;
extern const char string20[] PROGMEM;
extern const char string21[] PROGMEM;
extern const char string22[] PROGMEM;
extern const char string23[] PROGMEM;
extern const char string24[] PROGMEM;
extern const char string25[] PROGMEM;
extern const char string26[] PROGMEM;
extern const char string27[] PROGMEM;
extern const char string28[] PROGMEM;
extern const char string29[] PROGMEM;
extern const char string30[] PROGMEM;
extern const char string31[] PROGMEM;
extern const char string32[] PROGMEM;
extern const char string33[] PROGMEM;
extern const char string34[] PROGMEM;
extern const char string35[] PROGMEM;
extern const char string36[] PROGMEM;
extern const char string37[] PROGMEM;
extern const char string38[] PROGMEM;
extern const char string39[] PROGMEM;
extern const char string40[] PROGMEM;
extern const char string41[] PROGMEM;
extern const char string42[] PROGMEM;
extern const char string43[] PROGMEM;
extern const char string44[] PROGMEM;
extern const char string45[] PROGMEM;
extern const char string46[] PROGMEM;
extern const char string47[] PROGMEM;
extern const char string48[] PROGMEM;
extern const char string49[] PROGMEM;
extern const char string50[] PROGMEM;
extern const char string51[] PROGMEM;
extern const char string52[] PROGMEM;
extern const char string53[] PROGMEM;
extern const char string54[] PROGMEM;
extern const char string55[] PROGMEM;
extern const char string56[] PROGMEM;
extern const char string57[] PROGMEM;
extern const char string58[] PROGMEM;
extern const char string59[] PROGMEM;
extern const char string60[] PROGMEM;
extern const char string61[] PROGMEM;
extern const char string62[] PROGMEM;
extern const char string63[] PROGMEM;
extern const char string64[] PROGMEM;
extern const char string65[] PROGMEM;
extern const char string66[] PROGMEM;
extern const char string67[] PROGMEM;
extern const char string68[] PROGMEM;
extern const char string69[] PROGMEM;
extern const char string70[] PROGMEM;
extern const char string71[] PROGMEM;
extern const char string72[] PROGMEM;
extern const char string73[] PROGMEM;
extern const char string74[] PROGMEM;
extern const char string75[] PROGMEM;
extern const char string76[] PROGMEM;
extern const char string77[] PROGMEM;
extern const char string78[] PROGMEM;
extern const char string79[] PROGMEM;
extern const char string80[] PROGMEM;
extern const char string81[] PROGMEM;
extern const char string82[] PROGMEM;
extern const char string83[] PROGMEM;
extern const char string84[] PROGMEM;
extern const char string85[] PROGMEM;
extern const char string86[] PROGMEM;
extern const char string87[] PROGMEM;
extern const char string88[] PROGMEM;
extern const char string89[] PROGMEM;
extern const char string90[] PROGMEM;
extern const char string91[] PROGMEM;
extern const char string92[] PROGMEM;
extern const char string93[] PROGMEM;
extern const char string94[] PROGMEM;
extern const char string95[] PROGMEM;
extern const char string96[] PROGMEM;
extern const char string97[] PROGMEM;
extern const char string98[] PROGMEM;
extern const char string99[] PROGMEM;
extern const char string100[] PROGMEM;
extern const char string101[] PROGMEM;
extern const char string102[] PROGMEM;
extern const char string103[] PROGMEM;
extern const char string104[] PROGMEM;
extern const char string105[] PROGMEM;
extern const char string106[] PROGMEM;
extern const char string107[] PROGMEM;
extern const char string108[] PROGMEM;
extern const char string109[] PROGMEM;
extern const char string110[] PROGMEM;
extern const char string111[] PROGMEM;
extern const char string112[] PROGMEM;
extern const char string113[] PROGMEM;
extern const char string114[] PROGMEM;
extern const char string115[] PROGMEM;
extern const char string116[] PROGMEM;
extern const char string117[] PROGMEM;
extern const char string118[] PROGMEM;
extern const char string119[] PROGMEM;
extern const char string120[] PROGMEM;
extern const char string121[] PROGMEM;
extern const char string122[] PROGMEM;
extern const char string123[] PROGMEM;
extern const char string124[] PROGMEM;
extern const char string125[] PROGMEM;
extern const char string126[] PROGMEM;
extern const char string127[] PROGMEM;
extern const char string128[] PROGMEM;
extern const char string129[] PROGMEM;
extern const char string130[] PROGMEM;
extern const char string131[] PROGMEM;
extern const char string132[] PROGMEM;
extern const char string133[] PROGMEM;
extern const char string134[] PROGMEM;
extern const char string135[] PROGMEM;
extern const char string136[] PROGMEM;
extern const char string137[] PROGMEM;
extern const char string138[] PROGMEM;
extern const char string139[] PROGMEM;
extern const char string140[] PROGMEM;
extern const char string141[] PROGMEM;
extern const char string142[] PROGMEM;
extern const char string143[] PROGMEM;
extern const char string144[] PROGMEM;
extern const char string145[] PROGMEM;
extern const char string146[] PROGMEM;
extern const char string147[] PROGMEM;
extern const char string148[] PROGMEM;
extern const char string149[] PROGMEM;
extern const char string150[] PROGMEM;
extern const char string151[] PROGMEM;
extern const char string152[] PROGMEM;
extern const char string153[] PROGMEM;
extern const char string154[] PROGMEM;
extern const char string155[] PROGMEM;
extern const char string156[] PROGMEM;
extern const char string157[] PROGMEM;
extern const char string158[] PROGMEM;
extern const char string159[] PROGMEM;
extern const char string160[] PROGMEM;
extern const char string161[] PROGMEM;
extern const char string162[] PROGMEM;
extern const char string163[] PROGMEM;
extern const char string164[] PROGMEM;
extern const char string165[] PROGMEM;
extern const char string166[] PROGMEM;
extern const char string167[] PROGMEM;
extern const char string168[] PROGMEM;
extern const char string169[] PROGMEM;
extern const char string170[] PROGMEM;
extern const char string171[] PROGMEM;
extern const char string172[] PROGMEM;
extern const char string173[] PROGMEM;
extern const char string174[] PROGMEM;
extern const char string175[] PROGMEM;
extern const char string176[] PROGMEM;
extern const char string177[] PROGMEM;
extern const char string180[] PROGMEM;
extern const char string181[] PROGMEM;
extern const char string182[] PROGMEM;
extern const char string183[] PROGMEM;
extern const char string184[] PROGMEM;
extern const char string185[] PROGMEM;
extern const char string186[] PROGMEM;
extern const char string187[] PROGMEM;
extern const char string188[] PROGMEM;
extern const char string189[] PROGMEM;
extern const char string190[] PROGMEM;
extern const char string191[] PROGMEM;
extern const char string192[] PROGMEM;
extern const char string193[] PROGMEM;
extern const char string194[] PROGMEM;
extern const char string195[] PROGMEM;
extern const char string196[] PROGMEM;
extern const char string197[] PROGMEM;
extern const char string198[] PROGMEM;
extern const char string199[] PROGMEM;
extern const char string200[] PROGMEM;
extern const char string201[] PROGMEM;
extern const char string202[] PROGMEM;
extern const char string203[] PROGMEM;
extern const char string204[] PROGMEM;
extern const char string205[] PROGMEM;
extern const char string206[] PROGMEM;
extern const char string207[] PROGMEM;
extern const char string208[] PROGMEM;
extern const char string209[] PROGMEM;
extern const char string210[] PROGMEM;
extern const char string211[] PROGMEM;
extern const char string212[] PROGMEM;
extern const char string213[] PROGMEM;
extern const char string214[] PROGMEM;
extern const char string215[] PROGMEM;
extern const char string216[] PROGMEM;
extern const char string217[] PROGMEM;
extern const char string218[] PROGMEM;
extern const char string219[] PROGMEM;
extern const char string220[] PROGMEM;
extern const char string221[] PROGMEM;
extern const char string222[] PROGMEM;
extern const char string223[] PROGMEM;
extern const char string224[] PROGMEM;
extern const char string225[] PROGMEM;
extern const char string226[] PROGMEM;
extern const char string227[] PROGMEM;
extern const char string228[] PROGMEM;
extern const char string229[] PROGMEM;
extern const char string230[] PROGMEM;
extern const char string231[] PROGMEM;
extern const char string232[] PROGMEM;
extern const char doc0[] PROGMEM;
extern const char doc1[] PROGMEM;
extern const char doc2[] PROGMEM;
extern const char doc3[] PROGMEM;
extern const char doc7[] PROGMEM;
extern const char doc8[] PROGMEM;
extern const char doc9[] PROGMEM;
extern const char doc10[] PROGMEM;
extern const char doc14[] PROGMEM;
extern const char doc15[] PROGMEM;
extern const char doc16[] PROGMEM;
extern const char doc18[] PROGMEM;
extern const char doc20[] PROGMEM;
extern const char doc21[] PROGMEM;
extern const char doc22[] PROGMEM;
extern const char doc23[] PROGMEM;
extern const char doc24[] PROGMEM;
extern const char doc25[] PROGMEM;
extern const char doc26[] PROGMEM;
extern const char doc27[] PROGMEM;
extern const char doc28[] PROGMEM;
extern const char doc29[] PROGMEM;
extern const char doc30[] PROGMEM;
extern const char doc31[] PROGMEM;
extern const char doc32[] PROGMEM;
extern const char doc33[] PROGMEM;
extern const char doc34[] PROGMEM;
extern const char doc35[] PROGMEM;
extern const char doc36[] PROGMEM;
extern const char doc37[] PROGMEM;
extern const char doc38[] PROGMEM;
extern const char doc39[] PROGMEM;
extern const char doc40[] PROGMEM;
extern const char doc41[] PROGMEM;
extern const char doc42[] PROGMEM;
extern const char doc43[] PROGMEM;
extern const char doc44[] PROGMEM;
extern const char doc45[] PROGMEM;
extern const char doc46[] PROGMEM;
extern const char doc47[] PROGMEM;
extern const char doc48[] PROGMEM;
extern const char doc49[] PROGMEM;
extern const char doc50[] PROGMEM;
extern const char doc51[] PROGMEM;
extern const char doc52[] PROGMEM;
extern const char doc53[] PROGMEM;
extern const char doc54[] PROGMEM;
extern const char doc55[] PROGMEM;
extern const char doc57[] PROGMEM;
extern const char doc58[] PROGMEM;
extern const char doc59[] PROGMEM;
extern const char doc60[] PROGMEM;
extern const char doc61[] PROGMEM;
extern const char doc62[] PROGMEM;
extern const char doc63[] PROGMEM;
extern const char doc64[] PROGMEM;
extern const char doc65[] PROGMEM;
extern const char doc66[] PROGMEM;
extern const char doc67[] PROGMEM;
extern const char doc68[] PROGMEM;
extern const char doc69[] PROGMEM;
extern const char doc70[] PROGMEM;
extern const char doc72[] PROGMEM;
extern const char doc73[] PROGMEM;
extern const char doc74[] PROGMEM;
extern const char doc75[] PROGMEM;
extern const char doc76[] PROGMEM;
extern const char doc77[] PROGMEM;
extern const char doc79[] PROGMEM;
extern const char doc80[] PROGMEM;
extern const char doc81[] PROGMEM;
extern const char doc82[] PROGMEM;
extern const char doc83[] PROGMEM;
extern const char doc84[] PROGMEM;
extern const char doc85[] PROGMEM;
extern const char doc86[] PROGMEM;
extern const char doc87[] PROGMEM;
extern const char doc88[] PROGMEM;
extern const char doc89[] PROGMEM;
extern const char doc90[] PROGMEM;
extern const char doc91[] PROGMEM;
extern const char doc92[] PROGMEM;
extern const char doc93[] PROGMEM;
extern const char doc94[] PROGMEM;
extern const char doc95[] PROGMEM;
extern const char doc96[] PROGMEM;
extern const char doc97[] PROGMEM;
extern const char doc98[] PROGMEM;
extern const char doc99[] PROGMEM;
extern const char doc100[] PROGMEM;
extern const char doc101[] PROGMEM;
extern const char doc102[] PROGMEM;
extern const char doc103[] PROGMEM;
extern const char doc104[] PROGMEM;
extern const char doc105[] PROGMEM;
extern const char doc106[] PROGMEM;
extern const char doc107[] PROGMEM;
extern const char doc108[] PROGMEM;
extern const char doc109[] PROGMEM;
extern const char doc110[] PROGMEM;
extern const char doc111[] PROGMEM;
extern const char doc112[] PROGMEM;
extern const char doc113[] PROGMEM;
extern const char doc114[] PROGMEM;
extern const char doc115[] PROGMEM;
extern const char doc116[] PROGMEM;
extern const char doc117[] PROGMEM;
extern const char doc118[] PROGMEM;
extern const char doc119[] PROGMEM;
extern const char doc120[] PROGMEM;
extern const char doc121[] PROGMEM;
extern const char doc122[] PROGMEM;
extern const char doc123[] PROGMEM;
extern const char doc124[] PROGMEM;
extern const char doc125[] PROGMEM;
extern const char doc126[] PROGMEM;
extern const char doc127[] PROGMEM;
extern const char doc128[] PROGMEM;
extern const char doc129[] PROGMEM;
extern const char doc130[] PROGMEM;
extern const char doc131[] PROGMEM;
extern const char doc132[] PROGMEM;
extern const char doc133[] PROGMEM;
extern const char doc134[] PROGMEM;
extern const char doc135[] PROGMEM;
extern const char doc136[] PROGMEM;
extern const char doc137[] PROGMEM;
extern const char doc138[] PROGMEM;
extern const char doc139[] PROGMEM;
extern const char doc140[] PROGMEM;
extern const char doc141[] PROGMEM;
extern const char doc142[] PROGMEM;
extern const char doc143[] PROGMEM;
extern const char doc144[] PROGMEM;
extern const char doc145[] PROGMEM;
extern const char doc146[] PROGMEM;
extern const char doc147[] PROGMEM;
extern const char doc148[] PROGMEM;
extern const char doc149[] PROGMEM;
extern const char doc150[] PROGMEM;
extern const char doc151[] PROGMEM;
extern const char doc152[] PROGMEM;
extern const char doc153[] PROGMEM;
extern const char doc154[] PROGMEM;
extern const char doc155[] PROGMEM;
extern const char doc156[] PROGMEM;
extern const char doc157[] PROGMEM;
extern const char doc158[] PROGMEM;
extern const char doc159[] PROGMEM;
extern const char doc160[] PROGMEM;
extern const char doc161[] PROGMEM;
extern const char doc162[] PROGMEM;
extern const char doc163[] PROGMEM;
extern const char doc164[] PROGMEM;
extern const char doc165[] PROGMEM;
extern const char doc166[] PROGMEM;
extern const char doc167[] PROGMEM;
extern const char doc168[] PROGMEM;
extern const char doc169[] PROGMEM;
extern const char doc170[] PROGMEM;
extern const char doc171[] PROGMEM;
extern const char doc172[] PROGMEM;
extern const char doc173[] PROGMEM;
extern const char doc174[] PROGMEM;
extern const char doc175[] PROGMEM;
extern const char doc176[] PROGMEM;
extern const char doc177[] PROGMEM;
extern const char doc180[] PROGMEM;
extern const char doc181[] PROGMEM;
extern const char doc182[] PROGMEM;
extern const char doc183[] PROGMEM;
extern const char doc184[] PROGMEM;
extern const char doc185[] PROGMEM;
extern const char doc186[] PROGMEM;
extern const char doc187[] PROGMEM;
extern const char doc188[] PROGMEM;
extern const char doc189[] PROGMEM;
extern const char doc190[] PROGMEM;
extern const char doc191[] PROGMEM;
extern const char doc192[] PROGMEM;
extern const char doc193[] PROGMEM;
extern const char doc194[] PROGMEM;
extern const char doc195[] PROGMEM;
extern const char doc196[] PROGMEM;
extern const char doc197[] PROGMEM;
extern const char doc198[] PROGMEM;
extern const char doc199[] PROGMEM;
extern const char doc200[] PROGMEM;
extern const char doc201[] PROGMEM;
extern const char doc202[] PROGMEM;
extern const char doc203[] PROGMEM;
extern const char doc204[] PROGMEM;
extern const char doc205[] PROGMEM;
extern const char doc206[] PROGMEM;
extern const char doc207[] PROGMEM;
extern const char doc208[] PROGMEM;
extern const char doc209[] PROGMEM;
extern const char doc210[] PROGMEM;
extern const char doc211[] PROGMEM;
extern const char doc212[] PROGMEM;
extern const char doc213[] PROGMEM;
extern const char doc214[] PROGMEM;
extern const char doc215[] PROGMEM;
extern const char doc216[] PROGMEM;
extern const char doc217[] PROGMEM;
extern const char doc218[] PROGMEM;
extern const char doc219[] PROGMEM;
extern const char doc220[] PROGMEM;
extern const char doc221[] PROGMEM;
extern const char doc222[] PROGMEM;
extern const char doc223[] PROGMEM;
extern const char doc224[] PROGMEM;
extern const char doc225[] PROGMEM;
const tbl_entry_t lookup_table[] PROGMEM;
#if !defined(extensions)
tbl_entry_t *tables[];
const unsigned int tablesizes[];
const tbl_entry_t *table (int n);
unsigned int tablesize (int n);
#endif
intptr_t lookupfn (builtin_t name);
uint8_t getminmax (builtin_t name);
void checkminmax (builtin_t name, int nargs);
char *lookupdoc (builtin_t name);
bool findsubstring (char *part, builtin_t name);
void testescape ();
bool keywordp (object *obj);
object *eval (object *form, object *env);
void pserial (char c);
extern const char ControlCodes[] PROGMEM;
void pcharacter (uint8_t c, pfun_t pfun);
void pstring (char *s, pfun_t pfun);
void plispstring (object *form, pfun_t pfun);
void plispstr (symbol_t name, pfun_t pfun);
void printstring (object *form, pfun_t pfun);
void pbuiltin (builtin_t name, pfun_t pfun);
void pradix40 (symbol_t name, pfun_t pfun);
void printsymbol (object *form, pfun_t pfun);
void psymbol (symbol_t name, pfun_t pfun);
void pfstring (PGM_P s, pfun_t pfun);
void pint (int i, pfun_t pfun);
void pintbase (uint32_t i, uint8_t base, pfun_t pfun);
void pmantissa (float f, pfun_t pfun);
void pfloat (float f, pfun_t pfun);
inline void pln (pfun_t pfun);
void pfl (pfun_t pfun);
void plist (object *form, pfun_t pfun);
void pstream (object *form, pfun_t pfun);
void printobject (object *form, pfun_t pfun);
void prin1object (object *form, pfun_t pfun);
int glibrary ();
void loadfromlibrary (object *env);
int gserial ();
object *nextitem (gfun_t gfun);
object *readrest (gfun_t gfun);
object *read (gfun_t gfun);
void initenv ();
void initgfx ();
void repl (object *env);
void ulispreset ();
#include "ulisp.c"
#ifdef __cplusplus
}
#endif
#endif